{"version":3,"sources":["webpack://ignite-serveless-challenge/./src/helpers/http.ts","webpack://ignite-serveless-challenge/./src/models/Todo.ts","webpack://ignite-serveless-challenge/./src/repositories/TodosRepository.ts","webpack://ignite-serveless-challenge/./src/useCases/createTodo/CreateTodoUseCase.ts","webpack://ignite-serveless-challenge/external \"aws-sdk\"","webpack://ignite-serveless-challenge/external \"uuid\"","webpack://ignite-serveless-challenge/webpack/bootstrap","webpack://ignite-serveless-challenge/webpack/runtime/compat get default export","webpack://ignite-serveless-challenge/webpack/runtime/define property getters","webpack://ignite-serveless-challenge/webpack/runtime/hasOwnProperty shorthand","webpack://ignite-serveless-challenge/webpack/runtime/make namespace object","webpack://ignite-serveless-challenge/./src/handlers/createTodo.ts"],"names":["httpResponse","content","statusCode","body","JSON","stringify","created","internalServerError","message","Todo","this","id","v4","done","TodosRepository","tableName","process","env","TODOS_TABLE_NAME","dynamoDb","DynamoDB","data","todo","Object","assign","put","TableName","Item","promise","CreateTodoUseCase","todosRepository","create","module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","createTodoUseCase","handler","event","user_id","pathParameters","parse","execute","error","console","handle","bind"],"mappings":"mEAAO,MAQDA,EAAe,CAACC,EAAiBC,EARrB,OAQiD,CACjEA,aACAC,KAAMC,KAAKC,UAAUJ,KAKVK,EAAWL,GAAoBD,EAAaC,EAblC,KAiBVM,EAAsB,IAAMP,EAAa,CAAEQ,QAAS,8BAb5B,M,4CCJ9B,MAAMC,EAOX,cACOC,KAAKC,KACRD,KAAKC,IAAK,IAAAC,MACVF,KAAKG,MAAO,M,qDCNX,MAAMC,EAIX,cAFiB,KAAAC,UAAYC,QAAQC,IAAIC,iBAGvCR,KAAKS,SAAW,IAAI,EAAAC,SAAA,eAGtB,aAAaC,GACX,MAAMC,EAAO,IAAI,IASjB,OAPAC,OAAOC,OAAOF,EAAMD,SAEdX,KAAKS,SAASM,IAAI,CACtBC,UAAWhB,KAAKK,UAChBY,KAAML,IACLM,UAEIN,K,+BCnBJ,MAAMO,EACX,YAA6BC,GAAA,KAAAA,kBAE7B,cAAcT,GAGZ,aAFmBX,KAAKoB,gBAAgBC,OAAOV,M,QCTnDW,EAAOC,QAAUC,QAAQ,Y,QCAzBF,EAAOC,QAAUC,QAAQ,UCCrBC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaL,QAGrB,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,IAOV,OAHAO,EAAoBH,GAAUL,EAAQA,EAAOC,QAASG,GAG/CJ,EAAOC,QCpBfG,EAAoBK,EAAKT,IACxB,IAAIU,EAASV,GAAUA,EAAOW,WAC7B,IAAOX,EAAiB,QACxB,IAAM,EAEP,OADAI,EAAoBQ,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,GCLRN,EAAoBQ,EAAI,CAACX,EAASa,KACjC,IAAI,IAAIC,KAAOD,EACXV,EAAoBY,EAAEF,EAAYC,KAASX,EAAoBY,EAAEf,EAASc,IAC5ExB,OAAO0B,eAAehB,EAASc,EAAK,CAAEG,YAAY,EAAMC,IAAKL,EAAWC,MCJ3EX,EAAoBY,EAAI,CAACI,EAAKC,IAAU9B,OAAO+B,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFjB,EAAoBqB,EAAKxB,IACH,oBAAXyB,QAA0BA,OAAOC,aAC1CpC,OAAO0B,eAAehB,EAASyB,OAAOC,YAAa,CAAEC,MAAO,WAE7DrC,OAAO0B,eAAehB,EAAS,aAAc,CAAE2B,OAAO,K,kEC0BvD,MAAM9B,EAAkB,I,OAAI,GAEtB+B,EAAoB,IAAI,IAAkB/B,GAE1CgC,EAAU,IA1BhB,MACE,YAA6BD,GAAA,KAAAA,oBAE7B,aAAaE,GACX,IACE,MAAM,QAAEC,GAAYD,EAAME,eACpB5C,EAAOjB,KAAK8D,MAAMH,EAAM5D,MAExBmB,QAAaZ,KAAKmD,kBAAkBM,QAAQ,CAChDH,aACG3C,IAGL,OAAO,QAAQC,GACf,MAAM8C,GAGN,OAFAC,QAAQD,MAAM,QAASA,IAEhB,aASyBP,GAEzBS,EAASR,EAAQQ,OAAOC,KAAKT,I","file":"src/handlers/createTodo.js","sourcesContent":["export const OK = 200;\n\nexport const CREATED = 201;\n\nexport const BAD_REQUEST = 400;\n\nexport const INTERNAL_SERVER_ERROR = 500;\n\nconst httpResponse = (content: object, statusCode: number = OK) => ({\n  statusCode,\n  body: JSON.stringify(content)\n});\n\nexport const ok = (content: object) => httpResponse(content);\n\nexport const created = (content: object) => httpResponse(content, CREATED);\n\nexport const badRequest = (message: string) => httpResponse({ message }, BAD_REQUEST);\n\nexport const internalServerError = () => httpResponse({ message: 'Oopss, something is wrong!'}, INTERNAL_SERVER_ERROR)\n","import { v4 } from 'uuid';\n\nexport class Todo {\n  id: string;\n  user_id: string;\n  title: string;\n  done: boolean;\n  deadline: string;\n\n  constructor() {\n    if (!this.id) {\n      this.id = v4();\n      this.done = false;\n    }\n  }\n}","import { DynamoDB } from 'aws-sdk';\n\nimport { CreateTodoDto } from \"src/dtos/CreateTodoDto\";\nimport { Todo } from \"src/models/Todo\";\nimport { ITodosRepository } from \"./ITodosRepository\";\n\nexport class TodosRepository implements ITodosRepository {\n  private readonly dynamoDb: DynamoDB.DocumentClient;\n  private readonly tableName = process.env.TODOS_TABLE_NAME;\n  \n  constructor() {\n    this.dynamoDb = new DynamoDB.DocumentClient();\n  }\n\n  async create(data: CreateTodoDto): Promise<Todo> {\n    const todo = new Todo();\n    \n    Object.assign(todo, data)\n\n    await this.dynamoDb.put({\n      TableName: this.tableName,\n      Item: todo,\n    }).promise();\n\n    return todo;\n  }\n}","import { CreateTodoDto } from \"@dtos/CreateTodoDto\";\nimport { Todo } from \"@models/Todo\";\nimport { IUseCase } from \"@protocols/IUseCase\";\nimport { ITodosRepository } from \"@repositories/ITodosRepository\";\n\nexport class CreateTodoUseCase implements IUseCase<CreateTodoDto, Todo> {\n  constructor(private readonly todosRepository: ITodosRepository) {}\n  \n  async execute(data: CreateTodoDto): Promise<Todo> {\n    const todo = await this.todosRepository.create(data);\n\n    return todo;\n  }\n}","module.exports = require(\"aws-sdk\");;","module.exports = require(\"uuid\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { APIGatewayProxyEvent, APIGatewayProxyResult } from \"aws-lambda\";\nimport { CreateTodoDto } from \"@dtos/CreateTodoDto\";\nimport { created, internalServerError } from \"@helpers/http\";\nimport { Todo } from \"@models/Todo\";\nimport { IHandler } from \"@protocols/IHandler\";\nimport { IUseCase } from \"@protocols/IUseCase\";\nimport { CreateTodoUseCase } from \"@useCases/createTodo/CreateTodoUseCase\";\nimport { TodosRepository } from \"@repositories/TodosRepository\";\n\nclass CreateTodoHandler implements IHandler {\n  constructor(private readonly createTodoUseCase: IUseCase<CreateTodoDto, Todo>) {}\n\n  async handle(event: APIGatewayProxyEvent): Promise<APIGatewayProxyResult> {\n    try {\n      const { user_id } = event.pathParameters;\n      const data = JSON.parse(event.body);\n\n      const todo = await this.createTodoUseCase.execute({\n        user_id,\n        ...data,\n      });\n\n      return created(todo);\n    } catch(error) {\n      console.error('error', error);\n\n      return internalServerError();\n    }\n  }\n}\n\nconst todosRepository = new TodosRepository();\n\nconst createTodoUseCase = new CreateTodoUseCase(todosRepository);\n\nconst handler = new CreateTodoHandler(createTodoUseCase);\n\nexport const handle = handler.handle.bind(handler);"],"sourceRoot":""}